(function(){"use strict";self.onmessage=async r=>{const{type:n,code:l}=r.data;if(self.workerPrompt=async function(t){return new Promise(e=>{const s=o=>{o.data.type==="prompt"&&(console.log(o.data.input),e(o.data.input),self.removeEventListener("message",s))};self.addEventListener("message",s),self.postMessage({type:"prompt",prompt:t})})},self.moveForward=function(){self.postMessage({type:"move"})},self.turn=function(t){self.postMessage({type:"turn",direction:t})},self.reset=function(){self.postMessage({type:"reset"})},n==="load"){importScripts("https://cdn.jsdelivr.net/pyodide/v0.28.3/full/pyodide.js"),self.pyodide=await loadPyodide({indexURL:"https://cdn.jsdelivr.net/pyodide/v0.28.3/full/"}),self.postMessage({type:"ready"});return}else if(n==="run")try{const t=await self.pyodide.runPythonAsync(l),e=await self.pyodide.runPythonAsync("sys.stdout.getvalue()");self.postMessage({type:"result",result:e||"So empty here"})}catch{try{const e=await self.pyodide.runPythonAsync("sys.stderr.getvalue()");console.log(e);let s=e.lastIndexOf("Error");s=e.slice(s+6,e.length);let o=`
---
 ERROR: `+s+`
`;self.postMessage({type:"result",result:"Uh oh looks like you have an error! "+o})}catch{self.postMessage({type:"result",result:"Something went wrong, please try again."})}}}})();
